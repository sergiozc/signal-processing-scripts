%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%% PRÁCTICA 5: BEAMFORMER DELAY AND SUM %%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Autores: Javier Lobato Martín y Sergio Zapata Caparrós
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clc
clear all
close all

%Cargamos las señales
signals = load('signals_array.mat');
xc = signals.xc;
xc = cell2mat(xc); % 7 columnas

%Determinamos variables
Fs = 16e3;    %Frecuencia de muestreo
d = 0.04;     %Distancia entre sensores
Vprop = 340;  %Velocidad del sonido
Ltrama = 256; %Tramas de 256 muestras
N = 7;        %Contamos con 7 elementos
phi = pi/4;   %Ángulo de llegada del target
L_signal = length(xc());
Ntramas = 



%Para realizar el trabajo, usaremos un doble bucle

for ntram = 1:





